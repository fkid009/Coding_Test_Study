# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        reverse_ = ""
        while head is not None:
            reverse_ += str(head.val) 
            head = head.next
        reverse_ = reverse_[::-1]
        reverse_list = list(reverse_)

        chk = 0
        curr = result_head = ListNode("")
        while chk == len(reverse_list)-1:
            curr.next = ListNode(int(reverse_list[chk]))
            curr = curr.next
            chk += 1
        return result_head
