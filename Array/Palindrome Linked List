# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        p_list = []
        while head is not None:
            p_list.append(head.val)
            head = head.next

        len_p_list = len(p_list)

        if len_p_list % 2 != 0:
            p_list_1 = p_list[:int(len_p_list/ 2)]
            p_list_2 = p_list[int(len_p_list/ 2) + 1:]
            p_list_2 = p_list_2[::-1]
        else:
            p_list_1 = p_list[:int(len_p_list/ 2)]
            p_list_2 = p_list[int(len_p_list/ 2):]
            p_list_2 = p_list_2[::-1]

        if p_list_1 == p_list_2:
            return True
        else:
            return False
        
